This is the Python3 and Java Solution for LeetCode #217 : Contains Duplicates

Python 3 Solution
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        hashset = set()
        for n in nums:
            if n in hashset:
                return True
            hashset.add(n)
        return False

Java Solution
class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> intSet = new HashSet<>();
        for(int num:nums){
            if(intSet.contains(num))
                return true;
            intSet.add(num);  
        }
        return false;
    }
}

Time Complexity : O(n) since we only traverse the array once
Space Complexity : O(n) since we create a hashset which may take upto n integers (n : number of elements in array)
